@model SymCMS.ViewModels.CommentViewModel

@{
    Layout = null;
}
<div class="row justify-content-between">
    <div class="col-4">
        <label for="@Html.ValueFor(model => model.CommentId) name">
            @Html.NameFor(model => model.Author).ToString().Substring(5)
    </label>
</div>
    <div class="col-4 justify-content-end">
        <script>
            function adminControl() {
                document.getElementById(@Html.ValueFor(model => model.CommentId)+' del').classList.toggle('d-none');
                document.getElementById(@Html.ValueFor(model => model.CommentId).ToString()).classList.toggle('d-none');
                document.getElementById(@Model.CommentId + ' name').toggleAttribute('readonly');
                document.getElementById(@Model.CommentId + ' text').toggleAttribute('readonly');
            }
        </script>
        @if (User.IsInRole("Administrator") || User.IsInRole("Editor"))
        {
            <input type="button" class="btn btn-secondary float-right" onclick="document.getElementById(@Html.ValueFor(model => model.CommentId)+' del').classList.toggle('d-none');
document.getElementById(@Html.ValueFor(model => model.CommentId).ToString()).classList.toggle('d-none');
document.getElementById(@Model.CommentId + ' name').toggleAttribute('readonly');
document.getElementById(@Model.CommentId + ' text').toggleAttribute('readonly');" value="Edit" />
        }
    </div>
</div>
<div class="row justify-content-start">
    <div class="col-12">
        @using (Html.BeginForm("Edit", "Comment"))
        {
            <input hidden value=@Html.ValueFor(model => model.CommentId) name="CommentId" />
            <input hidden value="@Html.ValueFor(model => model.PostId)" name="PostId" />
            <input hidden value="@Html.ValueFor(model => model.PageId)" name="PageId" />
            <input class="form-control mb-4" readonly="readonly" id="@Html.ValueFor(model => model.CommentId) name" name="Author" value="@Html.ValueFor(model => model.Author)" />
            <label for="@Html.ValueFor(model => model.CommentId) text">@Html.NameFor(model => model.Comment).ToString().Substring(5)</label>
            <textarea class="form-control" readonly="readonly" name="Comment" id="@Html.ValueFor(model => model.CommentId) text">@Html.ValueFor(model => model.Comment)</textarea>
            <div class="float-left d-none" id="@Html.ValueFor(model => model.CommentId)">
                <button type="submit" class="btn btn-warning position-sticky mt-2">Save</button>
            </div>
        }
        @using (Html.BeginForm("Delete", "Comment", FormMethod.Post))
        {
            <input hidden value="@Html.ValueFor(model => model.CommentId)" name="id" />
            <input hidden value="@Html.ValueFor(model => model.PostId)" name="idPost" />
            <input hidden value="@Html.ValueFor(model => model.PageId)" name="idPage" />
            <div class="float-right d-none" id="@Html.ValueFor(model => model.CommentId) del">
                <button type="submit" class="btn btn-danger  position-sticky mt-2">Delete</button>
            </div>
        }

    </div>
</div>
