@using SymCMS.ViewModels
@model IEnumerable<SymCMS.ViewModels.CommentViewModel>

@{
    bool commentsEnabled;
    string id;
    if (ViewData.ContainsKey("PostComments"))
    {
        commentsEnabled = (bool) ViewData["PostComments"];
        id = "data-postid=" + ViewData["postId"];
    }
    else
    {
        commentsEnabled = (bool) ViewData["Pagecomments"];
        id = "data-pageid=" + ViewData["pageId"];
    }
    if (User.Identity.IsAuthenticated && !ViewData.ContainsKey("partial"))
    {
        <div class="form-group">
            <div class="row justify-content-between">
                <div class="col-4"></div>
                <div class="col-4">
                    <div class="switch_box box_1" style="justify-content: flex-end; position: absolute; right: 0%;">
                        <p class="text-lg-left display-4 text-secondary mr-2">Comments</p>
                        <input type="checkbox" class="switch_1 comment_switch" @id
                               @if (commentsEnabled)
                               {
                                   <text> checked</text>
                               }/>
                    </div>
                </div>
            </div>
        </div>
    }
    if (commentsEnabled)
    {
        <div class="form-group">
            @using (Html.BeginForm("Create", "Comment"))
            {
                var model = new CommentViewModel();
                <div class="row justify-content-between">
                    <div class="col-4">
                        <p class="text-lg-left display-4 text-secondary">New comment</p>
                    </div>
                </div>

                if (ViewData.ContainsKey("postId"))
                {
                    model.PostId = int.Parse(ViewData["postId"].ToString());
                }
                else
                {
                    model.PageId = int.Parse(ViewData["pageId"].ToString());
                }

                @Html.HiddenFor(m => model.PostId)
                @Html.HiddenFor(m => model.PageId)
                @Html.EditorFor(m => model.AuthorName, new {htmlAttributes = new {@class = "form-control mb-4", id = "name", placeholder = "Enter your name or email"}})
                <label class="h3 font-weight-light" for="comment">Comment</label>
                @Html.EditorFor(m => model.CommentText, new {htmlattributes = new {@class = "form-control", rows = "5", id = "comment", name = "text"}})
                <input type="submit" class="btn btn-primary mt-2 mb-2" id="addComment" value="Add comment"/>
            }
        </div>
        <div>
            @if (Model.Count() != 0)
            {
                <p class="text-lg-left display-4">All comments</p>
                <div class="form-group">
                    @foreach (var item in Model)
                    {
                        <div class="form-group position-relative">
                            @Html.EditorFor(m => item)
                        </div>
                        <hr/>
                    }
                </div>
            }
        </div>
    }
}